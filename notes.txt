Features
	1) Provides contrast ratio of any two colors or elements 
		|- function compareColors(color1, color2)
		|- function compareElements(element1, element2)
	2) Tags potential color contrast issues and returns a list of them
		2.a) Elements on top of each other
			|- function colorContrastSearch()
				|- does
					|- search through dom and categorize all elements based on their relationship to position on screen
						|- those on top
						|- those beside
					|- Based on elements found compare their colors
						|- those on top get compared 
						|- those beside get compared
					|- if element has id then pass that along with a tag placed on contrast ratio violations
				|- return 
					|- { 1: {dominate: {id: "", tags: {data-color-contrast: ""}}, recessiveID: {id: "", tags: {data-color-contrast: ""}}, data-contrast: "", color: "", style-type: ""}, 2: {...}}
	3) Auto adjust colors to meet contrast ratio requirements 
		|- function adjustColor(dominateColor, recessiveColor, currentContrastRatio, targetContrastRatio)
			|- Adjust non dominant color till targetContrastRatio is at requirement
		|- function fixContrastManual(element1, element2)
			|- does
				|- Grab colors from both elements
				|- determine if there is a contrast ratio violation
					|- if so then call adjustColor()
		|- function fixContrastAuto()
			|- does
				|- Using the results from colorContrastSearch()
					|- Loop through each element 
						|- call fixContrastManual()
	4) Get/set WCAG20 default contrast ratio requirement
		|- get
		|- set
